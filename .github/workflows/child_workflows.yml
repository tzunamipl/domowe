# Workflow to trigger inested workflows

name: Wykonywanie akcji zagnieżdżonych

on:
  repository_dispatch:
    types:
      - github_webhook
      - manual_webhook
  workflow_dispatch:
    # Workflow can be triggered with http request
    # curl --request POST --url 'https://api.github.com/repos/tzunamipl/domowe/dispatches' --header 'authorization: Bearer [token]' -d '{"event_type": "manual_webhook", "client_payload": {"PAYLOAD_VARIABLE": "trolololo"}}'
    # lub
    # curl -i -u [user]:[token] --request POST --url 'https://api.github.com/repos/tzunamipl/domowe/dispatches' -d '{"event_type": "manual_webhook", "client_payload": {"PAYLOAD_VARIABLE": "trolololo"}}'
    # Token must be set-up in users configuration, Settings -> Developer settings -> Personal access tokens
    inputs:
      VARIABLE:
        description: 'Dowolna zmienna'
        required: true
        default: 'wartosc_1'
        type: choice
        options:
        - wartosc_1
        - wartosc_2
        - wartosc_3
jobs:

  Wywolanie-akcji-na-tescie:
    runs-on: ubuntu-latest
    environment: test
    steps:
      - name: Git chekout
        uses: actions/checkout@v2.4.0
      - name: Zmienne środowiskowe
        #Przypisywanie sekretów do zmiennych srodiwskowych, w przeciwnym wypadku nie będą mogły być użyte w zagnieżdzonej akcji
        env:
          SEKRET_env: ${{ secrets.SECRET_1 }}
          VAR_env: ${{ env.ENV_VAR }}
          ZMIENNA_env: ${{ github.events.inputs.VARIABLE }}
          ZMIENNA_2_env: ${{ github.event.client_payload.PAYLOAD_VARIABLE }}
        run: |
          echo "TEN_SEKRET_ZADZIALA=${SEKRET_env}" >> $GITHUB_ENV
          echo "ZMIENNA_ZE_SRODOWISKA=${ZMIENNA_env}" >> $GITHUB_ENV
          echo "ZMIENNA=${ZMIENNA_env}" >> $GITHUB_ENV
          echo "ZMIENNA_2=${ZMIENNA_2_env}" >> $GITHUB_ENV
      - name: Akcja zagnieżdżona
        uses: ./.github/actions/do_stuff

  Wywolanie-akcji-na-incie:
    runs-on: ubuntu-latest
    environment: int
    steps:
      - name: Git chekout
        uses: actions/checkout@v2.4.0
      - name: Zmienne środowiskowe
        #Przypisywanie sekretów do zmiennych srodiwskowych, w przeciwnym wypadku nie będą mogły być użyte w zagnieżdzonej akcji
        env:
          SEKRET_env: ${{ secrets.SECRET_1 }}
          VAR_env: ${{ secrets.ENV_VAR }}
          ZMIENNA_env: ${{ github.events.inputs.VARIABLE }}
          ZMIENNA_2_env: ${{ github.event.client_payload.PAYLOAD_VARIABLE }}
        run: |
          echo "TEN_SEKRET_ZADZIALA=${SEKRET_env}" >> $GITHUB_ENV
          echo "ZMIENNA_ZE_SRODOWISKA=${VAR_env}" >> $GITHUB_ENV
          echo "ZMIENNA=${ZMIENNA_env}" >> $GITHUB_ENV
          echo "ZMIENNA_2=${ZMIENNA_2_env}" >> $GITHUB_ENV
      - name: Akcja zagnieżdżona
        uses: ./.github/actions/do_stuff

  Budowanie-mavena:
    runs-on: ubuntu-latest
    steps:
      - name: Git chekout
        uses: actions/checkout@v2.4.0
      - name: Set up Maven
        uses: stCarolas/setup-maven@v4.3
        with:
          maven-version: 3.8.2
      - name: Tests
        continue-on-error: true
        run: |
          cd ./maven
          mvn test
  # Test results
      - name: Test Report (Dorny)
        uses: dorny/test-reporter@v1
        # When used in composite workflow "if" causes to fail
        if: success() || failure()    # run this step even if previous step failed
        with:
          name: Dorny test results            # Name of the check run which will be created
          path: maven/target/**/*.xml    # Path to test results
          reporter: java-junit        # Format of test results
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: "maven/target/**/*.xml"

  Same-testy:
    runs-on: ubuntu-latest
    needs: [Budowanie-mavena, Wywolanie-akcji-na-incie]
    steps:
      # Test results
      - name: Test Report (Dorny)
        uses: dorny/test-reporter@v1
        # When used in composite workflow "if" causes to fail
        if: success() || failure()    # run this step even if previous step failed
        with:
          name: Dorny test results            # Name of the check run which will be created
          path: maven/target/**/*.xml    # Path to test results
          reporter: java-junit        # Format of test results
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: "maven/target/**/*.xml"

  Rownolegla-akcja:
    runs-on: ubuntu-latest
    steps:
      - name: Data
        run: |
          date
          sleep 34
